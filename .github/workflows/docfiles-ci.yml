name: Dotfiles CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test-docker:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      packages: write
      contents: read

    steps:
    - uses: actions/checkout@v3
    - uses: docker/setup-buildx-action@v2
      with:
        install: true

    - name: Log in to docker registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Image meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push demo container image to registry
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        push: true
        context: .
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Test dotfiles in docker
      run: make docker-test

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: docker
        path: ci-artifacts

  test-macOS:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3

    - name: Clean workspace
      run: rm -f ~/.gitconfig

    - name: Test dotfiles
      run: |
        make homebrew-required
        make test

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: macOS
        path: ci-artifacts

  publish-pr-comment:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    needs: [test-docker, test-macOS]
    permissions:
      pull-requests: write

    steps:

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: Assemble PR comment message
      run: |
        echo -n > comment
        cd artifacts
        {
          for d in *; do
            echo \# $d
            echo '```'
            cat $d/ztime_avg
            echo
            cat $d/ztime
            echo '```'
          done
        } 2>&1 >> ../comment

    - name: Add PR comment
      uses: mshick/add-pr-comment@v2
      if: ${{ github.event_name == 'pull_request' }}
      with:
        allow-repeats: true
        message-path: comment
