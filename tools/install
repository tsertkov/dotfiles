#!/usr/bin/env sh
# Install or update ~/dotfiles

ROOT="$HOME/dotfiles"
BACKUP="$ROOT-backup"
REPO="https://github.com/tsertkov/dotfiles.git"

# Fail early if $HOME is not set
if [ -z "${HOME+xxx}" ]; then
  echo "Error: \$HOME variable is not set."
  exit 1
fi

if [ -d "$ROOT" ]; then
  START_TXT="Updating existing dotfiles..."
  END_TXT="Dotfiles were updated successfully"
  echo $START_TXT
  cd "$ROOT"
  git pull
else
  START_TXT="Installing dotfiles..."
  END_TXT="Dotfiles were installed successfully"
  echo $START_TXT
  git clone --recursive "$REPO" "$ROOT"
  if [ ! $? -eq 0 ]; then
    echo "Error: Could not clone dotfiles git repository."
    exit 1
  fi
  cd "$ROOT"
fi

# Link dots/* to $HOME
for f in "$ROOT/dots/*"; do
  t="$HOME/.$(basename "$f")"

  if [ -L "$t" ]; then
    # break if file is already linked
    if [ "$(readlink "$t")" = "$f"  ]; then
      continue
    fi
  fi

  # keep backup of old dotfiles in configured folder
  if [ -e "$t" ]; then
    if [ ! -d "$BACKUP" ]; then
      mkdir "$BACKUP"
      if [ $? -eq 0 ]; then
        echo "Created backup directory at '$BACKUP'."
      else
        echo "Error: Could not create backup directory at '$BACKUP'."
        exit 1
      fi
    fi

    b="$BACKUP/$(basename "$t")"
    n=0
    while [ 1 ]; do
      b1="$b.$n"
      [ -f "$b1" ] || break
      n=$(expr $n + 1)
    done
    b="$b1"

    mv "$t" "$b"
    if [ $? -eq 0 ]; then
      ln -s "$f" "$t"
    else
      echo "Warning: Could not move '$t' into backup directory."
    fi
  else
    ln -s "$f" "$t"
  fi
done

# Install vundle packages
vim +BundleInstall +qall

echo $END_TXT
